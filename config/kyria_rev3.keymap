/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/behaviors.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 600   // default: 10

#include <dt-bindings/zmk/pointing.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

&sk {
    release-after-ms = <500>;
    ignore-modifiers;
};


/ {
    macros {
        bmagic: b_sequence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp E &kp C &kp A &kp U &kp S &kp E>;
        };
        imagic: i_sequence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp O &kp N>;
        };
        jmagic: j_sequence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp U &kp S &kp T>;
        };
        mmagic: m_sequence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp E &kp N &kp T>;
        };
        nmagic: n_sequence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp I &kp O &kp N>;
        };
        tmagic: t_sequence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp M &kp E &kp N &kp T>;
        };
        vmagic: v_sequence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp E &kp R>;
        };
        wmagic: w_sequence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp H &kp I &kp C &kp H>;
        };
        xmagic: x_sequence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp E &kp S>;
        };
        commamagic: comma_sequence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp SPACE &kp B &kp U &kp T>;
        };
        hashmagic: hash_sequence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp I &kp N &kp C &kp L &kp U &kp D &kp E>;
        };
        wspcmagic: wspc_sequence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp T &kp H &kp E>;
        };
        arepeat: a_repeat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp N &kp D>;
        };
        irepeat: i_repeat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp N &kp G>;
        };
        wrepeat: w_repeat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp O &kp U &kp L &kp D>;
        };
        yrepeat: y_repeat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp O &kp U>;
        };
        commarepeat: comma_repeat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp SPACE &kp A &kp N &kp D>;
        };
        dotrepeat: dot_repeat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp C &kp O &kp M>;
        };
        wspcrepeat: wspc_repeat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&macro_tap &kp F &kp O &kp R>;
        };
    };

    behaviors {
        aposquote: apostrophe_quote {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp APOS>, <&kp AT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        comexcl: comma_exclamation_mark {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dotquest: dot_question_mark {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp QMARK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        leftmouse: left_mouse {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&mmv MOVE_LEFT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        downmouse: down_mouse {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOWN>, <&mmv MOVE_DOWN>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        upmouse: up_mouse {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp UP>, <&mmv MOVE_UP>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        rightmouse: right_mouse {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&mmv MOVE_RIGHT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        magickey: magic_key {
            compatible = "zmk,behavior-antecedent-morph";
            label = "MAGIC_KEY";
            #binding-cells = <0>;
            defaults = <&kp N>;
            bindings = <&kp O>, <&bmagic>, <&kp Y>, <&kp Y>, <&kp U>,<&kp Y>, <&imagic>, <&jmagic>, <&kp S>, <&kp K>, <&mmagic>, <&nmagic>, <&kp A>, <&kp Y>, <&kp L>, <&kp K>, <&tmagic>, <&kp E>, <&vmagic>, <&wmagic>, <&xmagic>, <&kp P>, <&commamagic>, <&kp BSLH>, <&kp GT>, <&kp GT>, <&wspcmagic>, <&wspcmagic>, <&wspcmagic>, <&wspcmagic>, <&wspcmagic>, <&hashmagic>;
            antecedents = <A B C D E G I J K L M N O P R S T U V W X Y COMMA DOT MINUS EQUAL SPACE TAB RET APOS LPAR NUHS>;
            max-delay-ms = <1000>;
        };
        smartrepeat: smart_repeat {
            compatible = "zmk,behavior-antecedent-morph";
            label = "SMART_REPEAT";
            #binding-cells = <0>;
            defaults = <&kp L>;
            bindings = <&arepeat>, <&kp B>, <&kp C>, <&kp D>, <&kp E>, <&kp F>, <&kp G>, <&kp H>, <&irepeat>, <&kp J>, <&kp K>, <&kp L>, <&kp M>, <&kp N>, <&kp O>, <&kp P>, <&kp Q>, <&kp R>, <&kp S>, <&kp T>, <&kp U>, <&kp V>, <&wrepeat>, <&kp X>, <&yrepeat>, <&kp Z>, <&commarepeat>, <&dotrepeat>, <&wspcrepeat>, <&wspcrepeat>, <&wspcrepeat>, <&wspcrepeat>, <&wspcrepeat>;
            antecedents = <A B C D E F G H I J K L M N O P Q R S T U V W X Y Z COMMA DOT SPACE TAB RET APOS LPAR>;
            max-delay-ms = <1000>;
        };
        layerrepeat: layer_repeat {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&smartrepeat>;
            display-name = "Mod-Tap";
        };
        magicworkspace: magic_workspace {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&magickey>, <&kp N7>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LGUI|MOD_RGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default Layer";
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  V  |  M  |  L   |  C   |  P   |                                         |  B   |  MGK   |  U    |  O   |   Q   |  DEL |
            // |  BSPC |  S  |  T  |  R   |  D   |  Y   |                                         |  F   |  N     |  E    |  A   |   I   |  RET |
            // | SHIFT |  X  |  K  |  J   |  G   |  W   | L SHIFT| L SHIFT |  | LAYER 1 | L SHIFT |  Z   |  H     |  '    |  ,   |   .   | SHIFT|
            //                     | GUI  | GUI  | SPACE|  RPT   |   FN    |  |  LALT   | LAYER 1 | TAB  | LCTRL  | R-ALT |
            bindings = <
            &kp ESC   &kp V &kp M &kp L &kp C &kp P                                                 &kp B     &magicworkspace &kp U    &kp O     &kp Q   &kp DEL
            &kp BSPC  &kp S &kp T &kp R &kp D &kp Y                                                 &kp F     &kp N &kp E    &kp A     &kp I   &kp RET
            &sk LSHFT &kp X &kp K &kp J &kp G &kp W &sk LSHFT &sk LSHFT          &sl 1    &sk LSHFT &kp Z     &kp H &aposquote &comexcl  &dotquest &sk RSHFT
                        &kp SEMI  &kp LGUI &lt 1 SPACE &sk LCTRL &sl 2           &sk LALT &sl 1 &layerrepeat 1 0 &kp TAB &kp NUHS
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        symbol_layer {
            display-name = "Symbol Layer";
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  LPAR |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |
            bindings = <
            &trans &kp LPAR  &kp RPAR &kp ASTRK &kp LBKT &kp RBKT                                      &kp POUND &kp N7 &kp N8 &kp N9 &kp DQT  &trans
            &trans &kp EQUAL &kp PLUS &kp MINUS &kp LT   &kp TILDE2                                     &kp DOLLAR &kp N4 &kp N5 &kp N6 &kp N0    &trans
            &trans &kp FSLH  &kp PIPE2 &kp NUBS  &kp GT   &kp CARET  &trans &kp AMPS     &kp TILDE &trans &kp UNDER  &kp N1 &kp N2 &kp N3 &kp PRCNT &trans
                                      &kp HASH  &trans    &trans    &trans &trans        &trans &trans &trans &trans &kp GRAVE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        function_layer {
            display-name = "Function Layer";
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  LPAR |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |
            bindings = <
            &kp F11 &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                                 &kp F6         &kp F7    &kp F8    &kp F9    &kp F10   &kp F12
            &trans  &trans &trans &mkp LCLK &mkp RCLK &trans                                 &msc SCRL_UP   &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans
            &trans  &trans &trans &trans &tog 4 &trans &trans &mo 3     &trans &trans  &msc SCRL_DOWN &mkp LCLK &mkp RCLK &mkp MCLK &trans    &trans
                                  &trans &trans &trans &trans &trans     &trans &kp LCTRL &kp LSHFT      &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        mouse_layer {
            display-name = "Mouse Layer";
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  LPAR |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |
            bindings = <
            &trans  &trans &trans &trans &trans &trans                                 &trans    &trans     &trans     &trans   &trans      &trans
            &trans  &trans &trans &trans &trans &trans                                 &trans    &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &trans
            &trans  &trans &trans &trans &trans &trans &trans &trans     &trans &trans &trans    &trans     &trans     &trans   &trans      &trans
                                  &trans &trans &trans &trans &trans     &trans &kp LCTRL &kp LSHFT &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        game_layer {
            display-name = "Game Layer";
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |      |      |      |      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |
            bindings = <
            &trans    &kp I     &kp Q  &kp W  &kp E &kp R                                 &trans   &trans &trans &trans &trans &trans
            &kp TAB   &kp LSHFT &kp A  &kp S  &kp D &kp F                                 &trans   &trans &trans &trans &trans &trans
            &kp LCTRL &trans    &kp Z  &kp X  &kp C &kp V &trans &trans     &trans &trans &trans   &trans &trans &trans &trans &trans
                                &kp N1 &kp N2 &kp SPACE   &kp N3 &kp N4     &trans &trans &trans   &trans &tog 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
